---
- name: asdf install| scrape URL for latest version
  uri:
    url: https://api.github.com/repos/asdf-vm/asdf/releases/latest
    return_content: true
  register: latest

- name: asdf install| split it out
  set_fact:
    latest_version: "{{ latest.json.tag_name | regex_replace('v') }}"

- name: asdf install| is it already installed
  stat:
    path: ~/bin/asdf
  register: file_data

- name: asdf install| get version
  ansible.builtin.shell: ~/bin/asdf -V | cut -d " " -f 2
  register: VERSION
  when: file_data.stat.exists

- name: asdf install| when there is no VERSION or it's contents don't match, do these
  block:
    - name: asdf install| download the latest version
      get_url:
        url: https://github.com/asdf-vm/asdf/releases/download/v{{latest_version}}/asdf-v0.18.0-linux-amd64.tar.gz
        dest: /tmp/asdf.tar.gz
        mode: 0755

    - name: asdf Extract binary
      unarchive:
        src: /tmp/asdf.tar.gz
        dest: ~/bin/

    - name: asdf | Remove download
      ansible.builtin.file:
        path: /tmp/asdf.tar.gz
        state: absent
  when: (not file_data.stat.exists) or (VERSION != latest_version)

- name: asdf install| Do we have old files
  stat:
    path: ~/.asdf/asdf.sh
  register: old_file_data


- name: asdf install | Remove old version
  block:
    - name: asdf install | regenerate shims
      ansible.builtin.shell: ~/bin/asdf reshim

    - name: asdf install | remove old files
      ansible.builtin.shell: find $HOME/.asdf/ -maxdepth 1 -mindepth 1 -not -name downloads -not -name plugins -not -name installs -not -name shims -exec rm -r {} \;
  when: (old_file_data.stat.exists)


