- name: oh my zsh
  ansible.builtin.git:
    repo: https://github.com/robbyrussell/oh-my-zsh
    dest: ~/.oh-my-zsh
    depth: 1
    version: master

- name: asdf version
  uri:
    url: https://api.github.com/repos/asdf-vm/asdf/releases/latest
    return_content: true
  register: asdf_latest

- name: asdf version
  set_fact:
    asdf_latest_version: "{{ asdf_latest.json.tag_name }}"

- name: asdf install
  import_tasks: asdf.yml

- name: node install (via asdf)
  import_tasks: node.yml

- name: Upgrade pip3 to the latest
  pip:
    name: pip
    state: latest  # noqa package-latest
    virtualenv: ~/.venv/system/
    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"

- pip:
    name: hatch
    state: latest
    virtualenv: ~/.venv/system/
    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"

- name: Home bin directory
  ansible.builtin.file:
    path: "{{ ansible_facts.env.HOME }}/bin/"
    state: directory

- name: Put hatch in the path
  ansible.builtin.file:
    src: "{{ ansible_facts.env.HOME }}/.venv/system/bin/hatch"
    dest: "{{ ansible_facts.env.HOME }}/bin/hatch"
    state: link

- pip:
    name: ntfy
    state: latest
    virtualenv: ~/.venv/system/
    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"

- template:
    src: ntfy.yml
    dest: ~/.ntfy.yml

- name: Put ntfy in the path
  ansible.builtin.file:
    src: "{{ ansible_facts.env.HOME }}/.venv/system/bin/ntfy"
    dest: "{{ ansible_facts.env.HOME }}/bin/ntfy"
    state: link

# Requested needed by pushbullet
- pip:
    name: requests
    state: latest
    virtualenv: ~/.venv/system/
    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"

- git:
    repo: https://github.com/jchonig/pushbullet.git
    dest: ~/src/pushbullet/

- file:
    path: ~/bin
    state: directory

- copy:
    src: ~/src/pushbullet/pushbullet
    dest: ~/bin/pushbullet
    mode: 0500

- lineinfile:
    path: ~/.netrc
    regexp: '^machine pushbullet\.com'
    create: yes
    line: 'machine pushbullet.com login {{ pushbullet_user }} password {{ pushbullet_api_token }}'
    mode: 0600

- lineinfile:
    path: ~/bin/pushbullet
    regex: '^#!'
    line: "#!{{ ansible_facts.env.HOME }}/.venv/system/bin/python"

- pip:
    name: black
    state: latest
    virtualenv: ~/.venv/system/
    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"

- name: Put black in the path
  ansible.builtin.file:
    src: "{{ ansible_facts.env.HOME }}/.venv/system/bin/black"
    dest: "{{ ansible_facts.env.HOME }}/bin/black"
    state: link

## tmuxp
- pip:
    name: tmuxp
    state: latest
    virtualenv: ~/.venv/system/
    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"

- name: Put black in the path
  ansible.builtin.file:
    src: "{{ ansible_facts.env.HOME }}/.venv/system/bin/tmuxp"
    dest: "{{ ansible_facts.env.HOME }}/bin/tmuxp"
    state: link




- name: dircolors-solarized
  git:
    repo: https://github.com/seebi/dircolors-solarized.git
    dest: ~/src/dircolors-solarized/

- name: my-enviroment
  git:
    repo: git@github.com:chrisfleming/my-enviroment.git
    dest: $HOME/projects/my-enviroment
    accept_hostkey: yes
- name: Setup enviroment
  command: $HOME/projects/my-enviroment/bin/setup_links.sh
- file:
    path: $HOME/.oh-my-zsh
    mode: "g-w,o-w"
    recurse: yes
- file:
    path: $HOME/projects/my-enviroment/zsh/custom/
    mode: "g-w,o-w"
    recurse: yes


- name: tmux plugins
  command: ~/.tmux/plugins/tpm/bin/install_plugins

# Lets stick with just python3 for now!
#- pip:
#    name: pynvim
#    state: latest
#    virtualenv: ~/.venv/neovim3/
#    virtualenv_command: "{{ ansible_facts.python.executable }} -m venv"


